
a.Print odd numbers in an array (Using Anonymous Function):

const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

const printOddNumbers = function(arr) {
  arr.forEach(function(num) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
};

printOddNumbers(numbers);


b. Convert all the strings to title caps in a string array (Using Anonymous Function):

const strings = ["hello", "world", "javascript", "programming"];

const convertToTitleCaps = function(arr) {
  const titleCapsArray = arr.map(function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });

  console.log(titleCapsArray);
};

convertToTitleCaps(strings);


c.Sum of all numbers in an array (Using IIFE):

const numbers = [1, 2, 3, 4, 5];

(function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log("Sum:", sum);
})(numbers);


d. Return all the prime numbers in an array (Using IIFE):


const numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10];

(function(arr) {
  const isPrime = function(num) {
    if (num <= 1) return false;
    for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) return false;
    }
    return true;
  };

  const primeNumbers = arr.filter(function(num) {
    return isPrime(num);
  });

  console.log("Prime Numbers:", primeNumbers);
})(numbers);



e.Return all the palindromes in an array (Using IIFE):


const words = ["radar", "hello", "world", "level", "programming"];

(function(arr) {
  const isPalindrome = function(str) {
    return str === str.split("").reverse().join("");
  };

  const palindromeWords = arr.filter(function(word) {
    return isPalindrome(word);
  });

  console.log("Palindrome Words:", palindromeWords);
})(words);



f. Return the median of two sorted arrays of the same size (Using IIFE):

const arr1 = [1, 3, 5];
const arr2 = [2, 4, 6];

(function(arr1, arr2) {
  const mergeArrays = arr1.concat(arr2).sort((a, b) => a - b);
  const median =
    (mergeArrays[Math.floor(mergeArrays.length / 2)] +
      mergeArrays[Math.floor(mergeArrays.length / 2) - 1]) /
    2;
  console.log("Median:", median);
})(arr1, arr2);


g. Remove duplicates from an array (Using IIFE):

const numbers = [1, 2, 2, 3, 4, 4, 5, 5, 5];

(function(arr) {
  const uniqueArray = arr.filter(function(item, index) {
    return arr.indexOf(item) === index;
  });

  console.log("Unique Array:", uniqueArray);
})(numbers);


h.Rotate an array by k times (Using IIFE):

const numbers = [1, 2, 3, 4, 5];
const k = 2;

(function(arr, k) {
  k = k % arr.length; // Handle k larger than array size
  const rotatedArray = arr.slice(-k).concat(arr.slice(0, arr.length - k));

  console.log("Rotated Array:", rotatedArray);
})(numbers, k);





Do the below programs in arrow functions.

a. Print odd numbers in an array (Using Arrow Function):

const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

const printOddNumbers = (arr) => {
  arr.forEach((num) => {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
};

printOddNumbers(numbers);



b. Convert all the strings to title caps in a string array (Using Arrow Function):

const strings = ["hello", "world", "javascript", "programming"];

const convertToTitleCaps = (arr) => {
  const titleCapsArray = arr.map((str) => {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });

  console.log(titleCapsArray);
};

convertToTitleCaps(strings);


c. Sum of all numbers in an array (Using Arrow Function):

const numbers = [1, 2, 3, 4, 5];

const sumOfNumbers = (arr) => {
  let sum = 0;
  arr.forEach((num) => {
    sum += num;
  });
  console.log("Sum:", sum);
};

sumOfNumbers(numbers);



d. Return all the prime numbers in an array (Using Arrow Function):

const numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10];

const isPrime = (num) => {
  if (num <= 1) return false;
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) return false;
  }
  return true;
};

const primeNumbers = numbers.filter((num) => isPrime(num));
console.log("Prime Numbers:", primeNumbers);


e. Return all the palindromes in an array (Using Arrow Function):

const words = ["radar", "hello", "world", "level", "programming"];

const isPalindrome = (str) => {
  return str === str.split("").reverse().join("");
};

const palindromeWords = words.filter((word) => isPalindrome(word));
console.log("Palindrome Words:", palindromeWords);









